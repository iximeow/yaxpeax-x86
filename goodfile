if not Build.environment.has("rustup")
then
  Build.error("i don't know i want to handle dependencies yet")
end

Build.metric(
  "nightly version",
  "rustc --version"
)

Step.start("crate")
Step.push("build")
Build.run({"cargo", "build"}) -- `run` automatically records stdout and stderr to log files named after the command
Step.advance("test")
Build.run({"cargo", "test"}, {name="test stdlib/fmt"}) -- artifacts are stored under `name` if that's present
Build.run({"cargo", "test", "--no-default-features"}, {name="test nostdlib/nofmt"})
Build.run({"cargo", "test", "--no-default-features", "--features", "fmt"}, {name="test nostdlib/fmt"})

Step.start("ffi")
Step.push("build")
Build.run({"cargo", "+nightly", "build", "-Z", "build-std", "--release", "--no-default-features", "--target", "x86_64-unknown-linux-gnu"}, {cwd="ffi/"})

Step.advance("validate")
sopath = "ffi/target/x86_64-unknown-linux-gnu/release/libyaxpeax_x86_ffi_long_mode.so"
Build.run({"ls", sopath})
Build.metric(
  "libyaxpeax_x86_ffi_long_mode.so size (bytes)",
  Build.environment.size(sopath)
)
Build.artifact(sopath)

-- now run some perf numbers...
Step.start("perf")
Build.run({"git", "clone", "https://github.com/athre0z/disas-bench.git", "disas-bench"})
Build.run({"git", "submodule", "update", "--recursive", "--init"}, {cwd="disas-bench"})
Build.run({"git", "remote", "add", "dev", "../../.."}, {cwd="disas-bench/libs/yaxpeax"})
Build.run({"git", "fetch", "-a", "dev"}, {cwd="disas-bench/libs/yaxpeax"})
Build.run({"git", "checkout", Build.sha}, {cwd="disas-bench/libs/yaxpeax"})
Step.push("build")
Build.run({"make", "make-bench-yaxpeax"}, {cwd="disas-bench/bench/yaxpeax"})

Build.metric(
  "bench-yaxpeax-fmt size (bytes)",
  Build.environment.size("disas-bench/bench/yaxpeax/bench-yaxpeax-fmt")
)

Build.metric(
  "bench-yaxpeax-no-fmt size (bytes)",
  Build.environment.size("disas-bench/bench/yaxpeax/bench-yaxpeax-no-fmt")
)

-- fmt
Step.advance("fmt")
bench_start = Build.now_ms()

Build.run({"./bench-yaxpeax-fmt", "20", "0x400", "0x2460400", "../../input/xul.dll"}, {cwd="disas-bench/bench/yaxpeax"})

bench_end = Build.now_ms()
Build.metric("fmt runtime (ms)", bench_end - bench_start)

-- no-fmt
Step.advance("no-fmt")
bench_start = Build.now_ms()

Build.run({"./bench-yaxpeax-no-fmt", "20", "0x400", "0x2460400", "../../input/xul.dll"}, {cwd="disas-bench/bench/yaxpeax"})

bench_end = Build.now_ms()
Build.metric("no-fmt runtime (ms)", bench_end - bench_start)
